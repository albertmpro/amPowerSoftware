<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:desktop="clr-namespace:Albert.Standard.Win32"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:AlbertWPF">


	<Style TargetType="desktop:ATextField">
		<Setter Property="TextMargin" Value="14" />
		<Setter Property="Background" Value="#000000" />
		<Setter Property="Foreground" Value="#ffffff" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate  TargetType="desktop:ATextField">
					<Border x:Name="border" CornerRadius="{TemplateBinding CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ScrollViewer Margin="{TemplateBinding TextMargin}" x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="border" Value="0.56"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="desktop:ADock">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:ADock">
					<Border>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="auto" />
								<RowDefinition />
								<RowDefinition Height="auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" />
								<ColumnDefinition  />
								<ColumnDefinition Width="auto" />
							</Grid.ColumnDefinitions>
							<!-- TopBar-->
							<ContentPresenter Content="{TemplateBinding TopBar}" Visibility="{TemplateBinding TopBarVisibility}" Grid.ColumnSpan="3" Grid.Row="0" />
							<!-- LeftBar-->
							<ContentPresenter Content="{TemplateBinding LeftBar}" Visibility="{TemplateBinding LeftBarVisibility}" Grid.Column="0" Grid.Row="1" />
							<!-- Content -->
							<Viewbox Stretch="{TemplateBinding Stretch}" Grid.Row="1" Grid.Column="1" > 
								<Grid>
									<ContentPresenter Margin="{TemplateBinding Zoom}" Content="{TemplateBinding Content }" />
								</Grid>
							</Viewbox>

							<!-- RightBar-->

							<ContentPresenter Content="{TemplateBinding RightBar}" Visibility="{TemplateBinding RightBarVisibility}" Grid.Column="2" Grid.Row="1" />
							<!-- BottomBar-->
							<ContentPresenter Content="{TemplateBinding BottomBar}" Visibility="{TemplateBinding BottomBarVisibility}" Grid.ColumnSpan="3" Grid.Row="2" />


						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="desktop:DialogControl">
		<Setter Property="Stretch" Value="Normal" /> 
		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:ADock">
					<Border>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="auto" />
								<RowDefinition />
								<RowDefinition Height="auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" />
								<ColumnDefinition  />
								<ColumnDefinition Width="auto" />
							</Grid.ColumnDefinitions>
							<!-- TopBar-->
							<ContentPresenter Content="{TemplateBinding TopBar}" Visibility="{TemplateBinding TopBarVisibility}" Grid.ColumnSpan="3" Grid.Row="0" />
							<!-- LeftBar-->
							<ContentPresenter Content="{TemplateBinding LeftBar}" Visibility="{TemplateBinding LeftBarVisibility}" Grid.Column="0" Grid.Row="1" />
							<!-- Content -->
							<Viewbox Stretch="{TemplateBinding Stretch}" Grid.Row="1" Grid.Column="1" >
								<Grid>
									<ContentPresenter Margin="{TemplateBinding Zoom}" Content="{TemplateBinding Content }" />
								</Grid>
							</Viewbox>

							<!-- RightBar-->

							<ContentPresenter Content="{TemplateBinding RightBar}" Visibility="{TemplateBinding RightBarVisibility}" Grid.Column="2" Grid.Row="1" />
							<!-- BottomBar-->
							<ContentPresenter Content="{TemplateBinding BottomBar}" Visibility="{TemplateBinding BottomBarVisibility}" Grid.ColumnSpan="3" Grid.Row="2" />


						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="desktop:ZoomBox">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:ZoomBox">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
						<Viewbox Stretch="{TemplateBinding Stretch}">
							<Grid ScrollViewer.CanContentScroll="True">
								<ContentPresenter Margin="{TemplateBinding Zoom}" Content="{TemplateBinding Content}" />

							</Grid>
						</Viewbox>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="desktop:TextField">
		<Setter Property="FontSize" Value="12pt" />
		<Setter Property="HeaderFontSize" Value="14pt" />
		<Setter Property="HeaderForeground" Value="Black" />
		<Setter Property="HeaderMargin" Value="1,3" />
		<Setter Property="TextBoxMargin" Value="1" />
		<Setter Property="TextBoxHeight" Value="30" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:TextField">
					<Border Background="{TemplateBinding Background}" >
						<StackPanel>
							<TextBlock x:Name="PART_TextBlock" Foreground="{TemplateBinding HeaderForeground}" Margin="{TemplateBinding HeaderMargin}" Height="auto" />
							<TextBox x:Name="PART_TextBox" Margin="{TemplateBinding TextBoxMargin}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" FontSize="{TemplateBinding FontSize}"
					FontWeight="{TemplateBinding FontWeight}"
					FontStyle="{TemplateBinding FontStyle}"
					Height="{TemplateBinding TextBoxHeight}"
					FontFamily="{TemplateBinding FontFamily}"  />
						</StackPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>

		</Setter>

	</Style>

	<Style TargetType="desktop:ChromeBase">


		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:ChromeBase">

					<Border Background="{TemplateBinding  Background}" BorderBrush="{TemplateBinding  BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding  CornerRadius}">
						<ContentPresenter Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>

		</Setter>


	</Style>



	<!-- DocumentTabItem -->
	<Style TargetType="desktop:DocumentTabItem" >
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderThickness" Value=".5" />
		<Setter Property="CornerRadius" Value="2,2,0,0" />
		<Setter Property="Background" Value="#222222" />
		<Setter Property="Foreground" Value="White" />

		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:DocumentTabItem">
					<Border CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Margin="2,0,0,0" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid x:Name="panel">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<!-- Header -->
							<Label Foreground="{TemplateBinding Foreground}" Margin="7,0,7,0" VerticalAlignment="Center" HorizontalAlignment="Center"  Content="{TemplateBinding Header}"  />
							<!-- Closed Button-->
							<desktop:PushButton Grid.Column="1" Margin="3" FontSize="8pt" x:Name="PART_CloseButton" Width="30" Height="30" Foreground="White" BorderBrushMouseOver="Black"  ForegroundMouseOver="White" ForegroundPressed="White" Content="r" FontFamily="Webdings" Background="Red" BackgroundMouseOver="#FFB62929" BackgroundPressed="DarkRed" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsClosedEnabled" Value="True">
							<Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsClosedEnabled" Value="False">
							<Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsSelected"  Value="True">
							<Setter Property="Background" Value="#FF1D76C5" />
							<Setter Property="Foreground" Value="White" />
						</Trigger>
						<Trigger Property="IsSelected"  Value="False">
							<Setter Property="Background" Value="#222222" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>



	<!--PushButton-->
	<Style TargetType="desktop:PushButton">
		<Setter Property="FontFamily" Value="Segoe UI Light" />
		<Setter Property="FontSize" Value="10pt" />
		<Setter Property="Background" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="White" Offset="0.004" />
					<GradientStop Color="#FFF2F2F2" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BackgroundMouseOver" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF06A4B4" Offset="1"/>
					<GradientStop Color="#FF00C5FF" Offset="0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BackgroundPressed" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF0080FF" Offset="0"/>
					<GradientStop Color="#FF0051A2" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="ForegroundMouseOver" Value="#FFEAEAEA" />
		<Setter Property="ForegroundPressed" Value="#ffffff" />
		<Setter Property="BorderThickness" Value="1.2" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderBrushMouseOver" Value="White" />
		<Setter Property="BorderBrushPressed" Value="White" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Width" Value="80" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Stretch" Value="Fill" />
		<Setter Property="CornerRadius" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:PushButton">
					<Grid>
						<desktop:ChromeBase x:Name="chorme" Background="{TemplateBinding Background}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  BackgroundB="{TemplateBinding BackgroundMouseOver}"
								  BackgroundA="{TemplateBinding BackgroundPressed}"
								  Margin="{TemplateBinding Margin}"
								  BorderThickness="{TemplateBinding BorderThickness}"
						
								  ForegroundA="{TemplateBinding ForegroundPressed}"
								  ForegroundB="{TemplateBinding ForegroundMouseOver}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderBrushA="{TemplateBinding BorderBrushPressed}"
								  BorderBrushB="{TemplateBinding BorderBrushMouseOver}">
							<Grid>

								<!--Content-->
								<ContentPresenter x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}"  ContentStringFormat="{TemplateBinding ContentStringFormat}"   Content="{TemplateBinding Content}" VerticalAlignment="Center"  HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" />

								<!-- Image-->
								<Image Source="{TemplateBinding Source}" Stretch="{TemplateBinding Stretch}" />
							</Grid>
						</desktop:ChromeBase>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter  TargetName="chorme" Property="Background" Value="{Binding ElementName=chorme, Path=BackgroundB}"/>
							<Setter TargetName="chorme" Property="BorderBrush" Value="{Binding ElementName=chorme, Path=BorderBrushB}"/>
							<Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding ElementName=chorme, Path=ForegroundB}" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="chorme" Property="Background" Value="{Binding ElementName=chorme, Path=BackgroundA}"/>
							<Setter TargetName="chorme" Property="BorderBrush" Value="{Binding ElementName=chorme, Path=BorderBrushA}"/>
							<Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding ElementName=chorme, Path=ForegroundA}" />
						</Trigger>



					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>

		</Setter>


	</Style>

	<!--OptionButton-->
	<Style TargetType="desktop:OptionButton">

		<Setter Property="FontSize" Value="14pt" />
		<Setter Property="Background" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="White" Offset="0.004"/>
					<GradientStop Color="#FFC7E3EE" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BackgroundMouseOver" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF06A4B4" Offset="1"/>
					<GradientStop Color="#FF00C5FF" Offset="0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BackgroundChecked" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF0080FF" Offset="0"/>
					<GradientStop Color="#FF0051A2" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="ForegroundMouseOver" Value="#FFEAEAEA" />
		<Setter Property="ForegroundChecked" Value="#ffffff" />
		<Setter Property="BorderThickness" Value="1.2" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderBrushMouseOver" Value="#FF7E7E7E" />
		<Setter Property="BorderBrushChecked" Value="#FF0B86AA" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Width" Value="80" />
		<Setter Property="Height" Value="55" />
		<Setter Property="CornerRadius" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:OptionButton">
					<Grid>
						<desktop:ChromeBase x:Name="chorme" Background="{TemplateBinding Background}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  BackgroundB="{TemplateBinding BackgroundMouseOver}"
								  BackgroundA="{TemplateBinding BackgroundChecked}"
								  Margin="{TemplateBinding Margin}"
								  BorderThickness="{TemplateBinding BorderThickness}"
						
								  ForegroundA="{TemplateBinding ForegroundChecked}"
								  ForegroundB="{TemplateBinding ForegroundMouseOver}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderBrushA="{TemplateBinding BorderBrushChecked}"
								  BorderBrushB="{TemplateBinding BorderBrushMouseOver}">
							<!--Content-->
							<ContentPresenter x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}"  ContentStringFormat="{TemplateBinding ContentStringFormat}"   Content="{TemplateBinding Content}" VerticalAlignment="Center"  HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" />
						</desktop:ChromeBase>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter  TargetName="chorme" Property="Background" Value="{Binding ElementName=chorme, Path=BackgroundB}"/>
							<Setter TargetName="chorme" Property="BorderBrush" Value="{Binding ElementName=chorme, Path=BorderBrushB}"/>
							<Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding ElementName=chorme, Path=ForegroundB}" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="chorme" Property="Background" Value="{Binding ElementName=chorme, Path=BackgroundA}"/>
							<Setter TargetName="chorme" Property="BorderBrush" Value="{Binding ElementName=chorme, Path=BorderBrushA}"/>
							<Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding ElementName=chorme, Path=ForegroundA}" />
						</Trigger>

						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="chorme" Property="Background" Value="{Binding ElementName=chorme, Path=BackgroundA}"/>
							<Setter TargetName="chorme" Property="BorderBrush" Value="{Binding ElementName=chorme, Path=BorderBrushA}"/>
							<Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding ElementName=chorme, Path=ForegroundA}" />
						</Trigger>

					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>

		</Setter>


	</Style>

	<!--CheckedButton-->
	<Style TargetType="desktop:CheckButton">
		<Setter Property="FontFamily" Value="Segoe UI Light" />
		<Setter Property="FontSize" Value="14pt" />
		<Setter Property="Background" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="White" Offset="0.004"/>
					<GradientStop Color="#FFC7E3EE" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BackgroundMouseOver" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF06A4B4" Offset="1"/>
					<GradientStop Color="#FF00C5FF" Offset="0"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BackgroundChecked" >
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FF0080FF" Offset="0"/>
					<GradientStop Color="#FF0051A2" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="ForegroundMouseOver" Value="#FFEAEAEA" />
		<Setter Property="ForegroundChecked" Value="#ffffff" />
		<Setter Property="BorderThickness" Value="1.2" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="BorderBrushMouseOver" Value="#FF7E7E7E" />
		<Setter Property="BorderBrushChecked" Value="#FF0B86AA" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Width" Value="80" />
		<Setter Property="Height" Value="55" />
		<Setter Property="CornerRadius" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="desktop:CheckButton">
					<Grid>
						<desktop:ChromeBase x:Name="chorme" Background="{TemplateBinding Background}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  BackgroundB="{TemplateBinding BackgroundMouseOver}"
								  BackgroundA="{TemplateBinding BackgroundChecked}"
								  Margin="{TemplateBinding Margin}"
								  BorderThickness="{TemplateBinding BorderThickness}"
						
								  ForegroundA="{TemplateBinding ForegroundChecked}"
								  ForegroundB="{TemplateBinding ForegroundMouseOver}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderBrushA="{TemplateBinding BorderBrushChecked}"
								  BorderBrushB="{TemplateBinding BorderBrushMouseOver}">
							<!--Content-->
							<ContentPresenter x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}"  ContentStringFormat="{TemplateBinding ContentStringFormat}"   Content="{TemplateBinding Content}" VerticalAlignment="Center"  HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" />
						</desktop:ChromeBase>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter  TargetName="chorme" Property="Background" Value="{Binding ElementName=chorme, Path=BackgroundB}"/>
							<Setter TargetName="chorme" Property="BorderBrush" Value="{Binding ElementName=chorme, Path=BorderBrushB}"/>
							<Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding ElementName=chorme, Path=ForegroundB}" />
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="chorme" Property="Background" Value="{Binding ElementName=chorme, Path=BackgroundA}"/>
							<Setter TargetName="chorme" Property="BorderBrush" Value="{Binding ElementName=chorme, Path=BorderBrushA}"/>
							<Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding ElementName=chorme, Path=ForegroundA}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="chorme" Property="Background" Value="{Binding ElementName=chorme, Path=BackgroundA}"/>
							<Setter TargetName="chorme" Property="BorderBrush" Value="{Binding ElementName=chorme, Path=BorderBrushA}"/>
							<Setter TargetName="content" Property="TextElement.Foreground" Value="{Binding ElementName=chorme, Path=ForegroundA}" />
						</Trigger>


					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>

		</Setter>


	</Style>








</ResourceDictionary>
